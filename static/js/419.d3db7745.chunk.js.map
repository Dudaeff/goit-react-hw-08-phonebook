{"version":3,"file":"static/js/419.d3db7745.chunk.js","mappings":"mOAEaA,EAAOC,EAAAA,GAAAA,GAAH,sFAMJC,EAAWD,EAAAA,GAAAA,GAAH,qIASRE,EAAYF,EAAAA,GAAAA,OAAH,kI,UCVTG,EAAc,WAGzB,IAAMC,GAAkBC,EAAAA,EAAAA,MAMxB,OACE,SAACN,EAAD,UACGK,GACCA,EAAgBE,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC/B,OACE,UAACR,EAAD,YACE,yBAAIO,EAAJ,SACA,uBAAIC,KACJ,SAACP,EAAD,CACEQ,KAAK,SADP,sBAHaH,EAWlB,KAGR,E,oBCjCYI,EAAOX,EAAAA,GAAAA,KAAH,+GAOJY,EAAQZ,EAAAA,GAAAA,MAAH,2GAOLa,EAASb,EAAAA,GAAAA,OAAH,mOCXNc,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAmBjB,OACE,UAACP,EAAD,CAAMQ,SAlBiB,SAAAC,GACvBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACXf,EAAOc,EAAKE,SAAShB,KAAKiB,MAC1BhB,EAAQa,EAAKE,SAASf,MAAMgB,MAMlC,GAJ4BR,EAASS,MACnC,SAAAC,GAAO,OAAIA,EAAQnB,KAAKoB,gBAAkBpB,EAAKoB,aAAxC,IAIP,OAAOC,MAAM,6CAEfd,GAASe,EAAAA,EAAAA,IAAW,CAAEtB,KAAAA,EAAMC,MAAAA,KAC5Ba,EAAKS,OACN,EAGC,WACE,UAACnB,EAAD,mBAEE,kBACEF,KAAK,OACLF,KAAK,OACLwB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,UAACtB,EAAD,qBAEE,kBACEF,KAAK,MACLF,KAAK,QACLwB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,SAACrB,EAAD,CAAQH,KAAK,SAAb,2BAGL,E,UCjDYE,EAAQZ,EAAAA,GAAAA,MAAH,mICELmC,EAAS,WACpB,IAAMpB,GAAWC,EAAAA,EAAAA,MAMjB,OACE,UAAC,EAAD,oCAEE,kBAAON,KAAK,OAAO0B,SAPG,SAAAhB,GACxBL,GAASsB,EAAAA,EAAAA,IAAejB,EAAIG,cAAcE,OAC3C,MAQF,ECKD,EAhBqB,WACnB,IAAMa,GAAYC,EAAAA,EAAAA,MACZC,GAAQC,EAAAA,EAAAA,MAGd,OADAD,GAASE,QAAQF,MAAMA,IAErB,iCACE,SAAC1B,EAAD,KACA,sCACA,SAACqB,EAAD,IACCK,IAAS,uBAAIA,EAAMG,UACnBL,GAAY,uCAAoB,SAACnC,EAAD,MAGtC,C","sources":["components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  row-gap: 5px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  column-gap: 5px;\n  padding: 5px;\n\n  border: 1px dashed black;\n  border-radius: 5px;\n`;\n\nexport const DeleteBtn = styled.button`\n  margin-right: 0;\n  margin-left: auto;\n  padding: 2px 8px;\n  background-color: red;\n  color: white;\n`;\n","// import { useEffect } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { useContacts } from 'hooks';\nimport { useVisibleContacts } from 'hooks';\n// import { deleteContact, fetchContacts } from 'redux/contacts';\nimport { DeleteBtn, List, ListItem } from './ContactList.styled';\n\nexport const ContactList = () => {\n  // const dispatch = useDispatch();\n  // const contacts = useContacts();\n  const visibleContacts = useVisibleContacts();\n\n  // useEffect(() => {\n  //   dispatch(fetchContacts());\n  // }, [dispatch]);\n\n  return (\n    <List>\n      {visibleContacts &&\n        visibleContacts.map(({ id, name, phone }) => {\n          return (\n            <ListItem key={id}>\n              <p>{name}: </p>\n              <p>{phone}</p>\n              <DeleteBtn\n                type=\"button\"\n                // onClick={() => dispatch(deleteContact(id))}\n              >\n                Delete\n              </DeleteBtn>\n            </ListItem>\n          );\n        })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  font-weight: 600;\n  display: flex;\n  flex-direction: column;\n  row-gap: 5px;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  height: 30px;\n  margin: 0 auto;\n  font-weight: 600;\n  background-color: green;\n  color: white;\n  transition: transform 250ms linear;\n  :hover {\n    transform: scale(1.1);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { useContacts } from 'hooks';\nimport { addContact } from 'redux/contacts';\nimport { Button, Form, Label } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useContacts();\n\n  const handleFormSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const name = form.elements.name.value;\n    const phone = form.elements.phone.value;\n\n    const isAlreadyInContacts = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isAlreadyInContacts)\n      return alert('This contact is already in your contacts.');\n\n    dispatch(addContact({ name, phone }));\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <Label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 200px;\n  margin-bottom: 10px;\n  margin-top: 10px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/filter/filterSlice';\nimport { Label } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterInput = evt => {\n    dispatch(filterContacts(evt.currentTarget.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <input type=\"text\" onChange={handleFilterInput} />\n    </Label>\n  );\n};\n","import { useIsLoading } from 'hooks';\nimport { useError } from 'hooks';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/Filter';\n\nconst ContactsPage = () => {\n  const isLoading = useIsLoading();\n  const error = useError();\n\n  error && console.error(error);\n  return (\n    <>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {error && <p>{error.massage}</p>}\n      {isLoading ? <p>Loading...</p> : <ContactList />}\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["List","styled","ListItem","DeleteBtn","ContactList","visibleContacts","useVisibleContacts","map","id","name","phone","type","Form","Label","Button","ContactForm","dispatch","useDispatch","contacts","useContacts","onSubmit","evt","preventDefault","form","currentTarget","elements","value","find","contact","toLowerCase","alert","addContact","reset","pattern","title","required","Filter","onChange","filterContacts","isLoading","useIsLoading","error","useError","console","massage"],"sourceRoot":""}