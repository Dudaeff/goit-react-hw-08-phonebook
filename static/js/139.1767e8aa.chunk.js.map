{"version":3,"file":"static/js/139.1767e8aa.chunk.js","mappings":"mSAIMA,EAAWC,EAAAA,GAAAA,GAAH,iWAoBRC,EAAgBD,EAAAA,GAAAA,MAAH,uYAMJE,EAAAA,EAAAA,WAOEA,EAAAA,EAAAA,QAKAA,EAAAA,EAAAA,UAKXC,EAAgBH,EAAAA,GAAAA,MAAH,qLAGRI,EAAAA,EAAAA,KAEWA,EAAAA,EAAAA,QAKhBC,GAAiBL,EAAAA,EAAAA,IAAOM,EAAAA,EAAPN,CAAH,0C,gHChDPO,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAgBjB,OACE,kBAAMC,SAfa,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACjBN,GACEO,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAIrCL,EAAKQ,OACN,EAG+BC,aAAa,MAA3C,WACE,UAAC,KAAD,YACE,yBACE,UAAC,KAAD,oBAEE,SAAC,KAAD,CAAeC,KAAK,OAAOP,KAAK,OAAOQ,UAAQ,UAGnD,yBACE,UAAC,KAAD,qBAEE,SAAC,KAAD,CAAeD,KAAK,QAAQP,KAAK,QAAQQ,UAAQ,UAGrD,yBACE,UAAC,KAAD,wBAEE,SAAC,KAAD,CAAeD,KAAK,WAAWP,KAAK,WAAWQ,UAAQ,aAK7D,SAAC,KAAD,CAAgBD,KAAK,SAArB,sBAGL,EC9CD,EAJqB,WACnB,OAAO,SAAChB,EAAD,GACR,C","sources":["components/CommonStyles/FormList.styled.js","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport { colors, font } from './Variables';\nimport { Button } from './Button.styled';\n\nconst FormList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  row-gap: 15px;\n  margin-bottom: 15px;\n  margin-top: 40px;\n\n  @media screen and (min-width: 290px) {\n    align-items: center;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 80px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    margin-top: 100px;\n  }\n`;\n\nconst FormListLabel = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  column-gap: 5px;\n\n  font-size: ${font.sizeMobile};\n\n  @media screen and (min-width: 290px) {\n    width: 220px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: ${font.sizeTab};\n    column-gap: 10px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: ${font.sizeDesk};\n    column-gap: 15px;\n  }\n`;\n\nconst FormListInput = styled.input`\n  padding: 2px 5px;\n  max-width: 140px;\n  color: ${colors.text};\n  border-radius: 4px;\n  border: 1px solid ${colors.accent};\n  background-color: transparent;\n  outline: none;\n`;\n\nconst FormListButton = styled(Button)`\n  margin: 0 auto;\n`;\n\nexport { FormList, FormListLabel, FormListInput, FormListButton };\n","import {\n  FormList,\n  FormListButton,\n  FormListInput,\n  FormListLabel,\n} from 'components/CommonStyles/FormList.styled';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <FormList>\n        <li>\n          <FormListLabel>\n            Name:\n            <FormListInput type=\"text\" name=\"name\" required />\n          </FormListLabel>\n        </li>\n        <li>\n          <FormListLabel>\n            Email:\n            <FormListInput type=\"email\" name=\"email\" required />\n          </FormListLabel>\n        </li>\n        <li>\n          <FormListLabel>\n            Password:\n            <FormListInput type=\"password\" name=\"password\" required />\n          </FormListLabel>\n        </li>\n      </FormList>\n\n      <FormListButton type=\"submit\">Signup</FormListButton>\n    </form>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return <RegisterForm />;\n};\n\nexport default RegisterPage;\n"],"names":["FormList","styled","FormListLabel","font","FormListInput","colors","FormListButton","Button","RegisterForm","dispatch","useDispatch","onSubmit","evt","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","autoComplete","type","required"],"sourceRoot":""}